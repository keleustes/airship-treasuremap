apiVersion: armada.airshipit.org/v1alpha1
kind: ArmadaChart
metadata:
  labels:
    name: ucp-divingbell
  name: ucp-divingbell
  namespace: ucp
spec:
  chart_name: ucp-divingbell
  dependencies:
  - ucp-divingbell-htk
  install:
    no_hooks: false
  release: ucp-divingbell
  source:
    location: https://opendev.org/airship/divingbell
    reference: 00cebd8b3b4c8855039d08c1000a00fdfd884a05
    subpath: divingbell
    type: git
  upgrade:
    no_hooks: false
    pre:
      delete:
      - labels:
          release_group: airship-ucp-divingbell
        type: job
  values:
    conf:
      exec:
        X005-hanging-cgroup-release:
          data: |-
            #!/bin/bash
            set -ex

            cgroup_count() {
              echo "Current cgroup count: $(find /sys/fs/cgroup/*/system.slice -name tasks | wc -l)"
            }

            DATE=$(date)
            echo "$(cgroup_count)"
            echo   # Stop systemd mount unit that isn't actually mounted
            echo "Stopping Kubernetes systemd mount units that are not mounted to the system."
            systemctl list-units --state=running| \
              sed -rn '/Kubernetes.transient.mount/s,(run-\S+).+(/var/lib/kubelet/pods/.+),\1 \2,p' | \
              xargs -r -l1 sh -c 'test -d $2 || echo $1' -- | \
              xargs -r -tl1 systemctl stop |& wc -l
            echo "$(cgroup_count)"
          rerun_interval: 3600
          rerun_policy: always
          timeout: 600
        X005-rbd-roomba-scanner:
          data: |-
            #!/bin/bash
            set -ex

            # don't put it in /tmp where it can be p0wned (???)
            lsblk | awk '/^rbd/ {if($7==""){print $0}}' | awk '{ printf "/dev/%s\n",$1 }' > /var/run/rbd_list

            # wait a while, so we don't catch rbd devices the kubelet is working on mounting
            sleep 60

            # finally, examine rbd devices again and if any were seen previously (60s ago) we will
            # forcefully unmount them if they have no fs mounts
            DATE=$(date)
            for rbd in `lsblk | awk '/^rbd/ {if($7==""){print $0}}' | awk '{ printf "/dev/%s\n",$1 }'`; do
              if grep -q $rbd /var/run/rbd_list; then
                echo "[${DATE}] Unmapping stale RBD $rbd"
                /usr/bin/rbd unmap -o force $rbd
                # NOTE(supamatt): rbd unmap -o force will only succeed if there are NO pending I/O
              else
                echo "[${DATE}] Skipping RBD $rbd as it hasn't been stale for at least 60 seconds"
              fi
            done
            rm -rf /var/run/rbd_list
          rerun_interval: 300
          rerun_policy: always
          timeout: 300
      sysctl:
        fs.inotify.max_user_watches: "1048576"
        kernel.panic: "60"
        kernel.randomize_va_space: "2"
        net.core.netdev_max_backlog: "261144"
        net.ipv4.conf.all.arp_accept: "1"
        net.ipv4.conf.default.arp_accept: "1"
        net.ipv4.conf.default.rp_filter: "0"
        net.ipv4.neigh.default.gc_thresh1: "4096"
        net.ipv4.neigh.default.gc_thresh2: "8192"
        net.ipv4.neigh.default.gc_thresh3: "16384"
        net.ipv4.tcp_keepalive_intvl: "3"
        net.ipv4.tcp_keepalive_probes: "8"
        net.ipv4.tcp_keepalive_time: "30"
        net.ipv4.tcp_retries2: "5"
        net.netfilter.nf_conntrack_acct: "1"
        net.nf_conntrack_max: "1048576"
      uamlite:
        users:
        - user_crypt_passwd: $6$AVL7yH1sLYlKqvcK$ngUiLKYZQhhj07Lb3ngWa4qVwDgUP9pCGfGFG7JIpF.6iStnfEMeySf8XusA0/3i9O5gMHE9hbg1/4GrFb5rR0
          user_name: ubuntu
          user_sshkeys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCycUyxcb+AJIOyU2fzJ0C0tj7UnWZkIAstdPOpeuHQejhezFFT46w3CA9tvr/XlrLu6Rwk7E8qLJvBCGUuZnE0dkRgwgjv6irjy90jA3sY9pdW5h+MxrlbLVNXOEsZbHzEK3sU7WfCpAuIEcxmL+F5+0h73BCqKNG5IiJKApmzPvwYoOxc1BuWguVrFjHqEhYUjMkJwyNRXy6Sfm0MiOVcdF7uvgK7tf25mGUaoyGWJYKTSJCOJ4M535BN5n3G8amTP3fcna1Ig8Rn9yDkGF5obe5TPB7zKuLNMp2bZW5YkSIQFRpm1RDHypXqNa0Lmr4pQyKNL+Auoq852D++XH43
            airsloop@airship
          user_sudo: true
    images:
      divingbell: docker.io/ubuntu:16.04
    manifests:
      daemonset_apparmor: false
      daemonset_apt: true
      daemonset_ethtool: false
      daemonset_exec: true
      daemonset_limits: false
      daemonset_mounts: false
      daemonset_perm: false
      daemonset_sysctl: false
      daemonset_uamlite: true
  wait:
    labels:
      release_group: airship-ucp-divingbell
    timeout: 300
